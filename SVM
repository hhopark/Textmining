from sklearn import datasets
from sklearn.model_selection import train_test_split
from sklearn.cross_decomposition import tests
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import Perceptron
from sklearn.linear_model import LogisticRegression
from sklearn.svm import SVC
from sklearn.metrics import accuracy_score
import numpy as np
from matplotlib import style
style.use('seaborn-talk')

if __name__ =='__main__':
    iris = datasets.load_iris()
    X = iris.data[:, [2,3]]
    y = iris.target

    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=0)

    sc = StandardScaler()
    sc.fit(X_train) # X_train의 평균과 표준편차
    X_train_std = sc.transform(X_train) # 트레이닝 데이터 표준화
    X_test_std = sc.transform(X_test) # 테스트 데이터 표준화
    ml = SVC(kernel='linear', C=1.0, random_state=0)

    ml.fit(X_train_std, y_train)
    y_pred = ml.predict(X_test_std)
    print('총 테스트 개수 : %d, 오류개수 : %d' %(len(y_test), (y_test != y_pred).sum()))
    print('정확도: %.2f' %accuracy_score(y_test, y_pred))

    X_combined_std = np.vstack((X_train_std, X_test_std))
    y_combined = np.hstack((y_train, y_test))
